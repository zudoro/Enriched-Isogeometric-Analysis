! 			IF (PATCH.EQ.3) THEN
! 				!----------------------- RIGHT SIDE ON THE PARAMETER SPACE ------------------------!
! 				TOTAL_LIMIT = IR_GRID(PATCH, 2, JJ+1) - IR_GRID(PATCH, 2, JJ)
! 				SUB_LN = VEC2D(POINT2D(1.D0,IR_GRID(PATCH,2,JJ)), POINT2D(1.D0,IR_GRID(PATCH,2,JJ) + (0.5D0)*TOTAL_LIMIT))
! 				DIFF_NN = 0.D0
! 				CALL LEAST_SQUARE_LC_INT_II(SF1, INDX1, WEIGHT, EXACT_ON_BD, PATCH, SUB_LN, 'R')
! 				DO I=1, UBOUND(INDX1,1)
! 					DO J=1, UBOUND(INDX1,1)
! 						CALL DR_GL_INDX_FII(GLOBAL_INDX(1:2), PATCH, (/I,J/), INDX1)
! 						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 						ELSE
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 						ENDIF
! 					ENDDO
! 					IF (GLOBAL_INDX(1).EQ.0) THEN
! 					ELSE
! 						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 						SUB_F(GLOBAL_INDX(1))%X = SUB_F(GLOBAL_INDX(1))%X + DIFF_NN
! 						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 						SUB_F(GLOBAL_INDX(1))%Y = SUB_F(GLOBAL_INDX(1))%Y + DIFF_NN
! 					ENDIF
! 				ENDDO
! 				DO MASTER_PATCH = 1, PATCH-1
! 					!-----------------Compute elements on interface (i.e. FII)---------------------
! 					DO I = 1, UBOUND(INDX1,1)
! 						DO J = 1, UBOUND(INDX1,1)
! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 							IF ((GLOBAL_INDX(1).NE.0 .AND. GLOBAL_INDX(2).NE.0) .OR. &
! 									(GLOBAL_INDX(3).NE.0 .AND. GLOBAL_INDX(4).NE.0) .OR. &
! 									(GLOBAL_INDX(5).NE.0 .AND. GLOBAL_INDX(6).NE.0)) THEN
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 								DO GLOBAL_I = 1, 3
! 									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0 .AND. GLOBAL_INDX(INT(2*GLOBAL_I)).NE.0) THEN
! 										SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) = SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) + DIFF_NN
! 									ENDIF
! 								ENDDO
! 							ENDIF
! 						ENDDO
! 						CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,I/), INDX1)
! 						IF (GLOBAL_INDX(1).NE.0 .OR. GLOBAL_INDX(3).NE.0 .OR. GLOBAL_INDX(5).NE.0) THEN
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 							DO GLOBAL_I = 1, 3
! 								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X + DIFF_NN
! 								ENDIF
! 							ENDDO
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 							DO GLOBAL_I = 1, 3
! 								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y + DIFF_NN
! 								ENDIF
! 							ENDDO
! 						ENDIF
! 					ENDDO
! 					!-----------------Compute elements on interface FIJ---------------------
! 					DO I = 1, UBOUND(INDX1,1)
! 						DO J = 1, UBOUND(INDX1,1)
! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_AND_NONINTERFACE(GLOBAL_INDX(1:2), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 							IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 							ELSE
! 		! 								PRINT*, 'HERE 2', GLOBAL_INDX
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 								SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 								SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
! 							ENDIF
! 						ENDDO
! 					ENDDO
! 				ENDDO
! 				
! 				PRINT*, 'RG-1', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
! ! 				READ(*,*) 
! 				
! 				DO II = 2, MAX_NUM_LIMIT
! 					SUB_LN = VEC2D(POINT2D(1.D0,IR_GRID(PATCH,2,JJ+1) - (0.5D0)**(II-1)*TOTAL_LIMIT), POINT2D(1.D0,IR_GRID(PATCH,2,JJ+1) - (0.5D0)**(II)*TOTAL_LIMIT))
! 					DIFF_NN = 0.D0
! 					CALL LEAST_SQUARE_LC_INT_II(SF1, INDX1, WEIGHT, EXACT_ON_BD, PATCH, SUB_LN, 'R')
! 					DO I=1, UBOUND(INDX1,1)
! 						DO J=1, UBOUND(INDX1,1)
! 							CALL DR_GL_INDX_FII(GLOBAL_INDX(1:2), PATCH, (/I,J/), INDX1)
! 							IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 							ELSE
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 								SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 							ENDIF
! 						ENDDO
! 						IF (GLOBAL_INDX(1).EQ.0) THEN
! 						ELSE
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 							SUB_F(GLOBAL_INDX(1))%X = SUB_F(GLOBAL_INDX(1))%X + DIFF_NN
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 							SUB_F(GLOBAL_INDX(1))%Y = SUB_F(GLOBAL_INDX(1))%Y + DIFF_NN
! 						ENDIF
! 					ENDDO
! 					DO MASTER_PATCH = 1, PATCH-1
! 						!-----------------Compute elements on interface (i.e. FII)---------------------
! 						DO I = 1, UBOUND(INDX1,1)
! 							DO J = 1, UBOUND(INDX1,1)
! 								CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 								IF ((GLOBAL_INDX(1).NE.0 .AND. GLOBAL_INDX(2).NE.0) .OR. &
! 										(GLOBAL_INDX(3).NE.0 .AND. GLOBAL_INDX(4).NE.0) .OR. &
! 										(GLOBAL_INDX(5).NE.0 .AND. GLOBAL_INDX(6).NE.0)) THEN
! 									DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 									DO GLOBAL_I = 1, 3
! 										IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0 .AND. GLOBAL_INDX(INT(2*GLOBAL_I)).NE.0) THEN
! 											SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) = SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) + DIFF_NN
! 										ENDIF
! 									ENDDO
! 								ENDIF
! 							ENDDO
! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,I/), INDX1)
! 							IF (GLOBAL_INDX(1).NE.0 .OR. GLOBAL_INDX(3).NE.0 .OR. GLOBAL_INDX(5).NE.0) THEN
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 								DO GLOBAL_I = 1, 3
! 									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 										SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X + DIFF_NN
! 									ENDIF
! 								ENDDO
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 								DO GLOBAL_I = 1, 3
! 									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 										SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y + DIFF_NN
! 									ENDIF
! 								ENDDO
! 							ENDIF
! 						ENDDO
! 						!-----------------Compute elements on interface FIJ---------------------
! 						DO I = 1, UBOUND(INDX1,1)
! 							DO J = 1, UBOUND(INDX1,1)
! 								CALL DR_FIND_GL_INDX_ALONG_INTERFACE_AND_NONINTERFACE(GLOBAL_INDX(1:2), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 								IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 								ELSE
! 			! 								PRINT*, 'HERE 2', GLOBAL_INDX
! 									DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 									SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 									SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
! 								ENDIF
! 							ENDDO
! 						ENDDO
! 					ENDDO
! 				ENDDO
! 				
! 				PRINT*, 'RG-2', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
! ! 				READ(*,*) 
! 				
! 				II = MAX_NUM_LIMIT
! 				SUB_LN = VEC2D(POINT2D(1.D0,IR_GRID(PATCH,2,JJ+1) - (0.5D0)**(II)*TOTAL_LIMIT), POINT2D(1.D0,IR_GRID(PATCH,2,JJ+1)))
! 				DIFF_NN = 0.D0
! 				CALL LEAST_SQUARE_LC_INT_II(SF1, INDX1, WEIGHT, EXACT_ON_BD, PATCH, SUB_LN, 'R')
! 				DO I=1, UBOUND(INDX1,1)
! 					DO J=1, UBOUND(INDX1,1)
! 						CALL DR_GL_INDX_FII(GLOBAL_INDX(1:2), PATCH, (/I,J/), INDX1)
! 						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 						ELSE
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 						ENDIF
! 					ENDDO
! 					IF (GLOBAL_INDX(1).EQ.0) THEN
! 					ELSE
! 						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 						SUB_F(GLOBAL_INDX(1))%X = SUB_F(GLOBAL_INDX(1))%X + DIFF_NN
! 						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 						SUB_F(GLOBAL_INDX(1))%Y = SUB_F(GLOBAL_INDX(1))%Y + DIFF_NN
! 					ENDIF
! 				ENDDO
! 				DO MASTER_PATCH = 1, PATCH-1
! 					!-----------------Compute elements on interface (i.e. FII)---------------------
! 					DO I = 1, UBOUND(INDX1,1)
! 						DO J = 1, UBOUND(INDX1,1)
! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 							IF ((GLOBAL_INDX(1).NE.0 .AND. GLOBAL_INDX(2).NE.0) .OR. &
! 									(GLOBAL_INDX(3).NE.0 .AND. GLOBAL_INDX(4).NE.0) .OR. &
! 									(GLOBAL_INDX(5).NE.0 .AND. GLOBAL_INDX(6).NE.0)) THEN
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 								DO GLOBAL_I = 1, 3
! 									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0 .AND. GLOBAL_INDX(INT(2*GLOBAL_I)).NE.0) THEN
! 										SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) = SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) + DIFF_NN
! 									ENDIF
! 								ENDDO
! 							ENDIF
! 						ENDDO
! 						CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,I/), INDX1)
! 						IF (GLOBAL_INDX(1).NE.0 .OR. GLOBAL_INDX(3).NE.0 .OR. GLOBAL_INDX(5).NE.0) THEN
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 							DO GLOBAL_I = 1, 3
! 								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X + DIFF_NN
! 								ENDIF
! 							ENDDO
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 							DO GLOBAL_I = 1, 3
! 								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y + DIFF_NN
! 								ENDIF
! 							ENDDO
! 						ENDIF
! 					ENDDO
! 					!-----------------Compute elements on interface FIJ---------------------
! 					DO I = 1, UBOUND(INDX1,1)
! 						DO J = 1, UBOUND(INDX1,1)
! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_AND_NONINTERFACE(GLOBAL_INDX(1:2), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 							IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 							ELSE
! 		! 								PRINT*, 'HERE 2', GLOBAL_INDX
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/NUMGSPT, 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 								SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 								SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
! 							ENDIF
! 						ENDDO
! 					ENDDO
! 				ENDDO
! 				
! 				PRINT*, 'RG-3', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
! ! 				READ(*,*) 
! 				
! 			ENDIF