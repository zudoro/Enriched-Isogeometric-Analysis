SUBROUTINE GEN_BD_LN(SUB_K, SUB_F)

	REAL*8, INTENT(OUT) :: SUB_K(SUM(DR_BDNDX(:,1)%LC_NUM), SUM(DR_BDNDX(:,1)%LC_NUM))
	TYPE(POINT2D), INTENT(OUT) :: SUB_F(SUM(DR_BDNDX(:,1)%LC_NUM))
	TYPE(POINT2D), ALLOCATABLE :: EXACT_ON_BD(:)
	TYPE(FVALUE), ALLOCATABLE :: SF1(:,:), SF2(:,:)
	TYPE(INT2D), ALLOCATABLE :: INDX1(:), INDX2(:)
	TYPE(VEC2D), ALLOCATABLE :: GEO_MESH(:)
	TYPE(POINT2D) :: BDPT(2)

	REAL*8 :: DIFF_NN, DET_M, SUB_LN_LENGTH
	INTEGER :: I, J, II, JJ, KK, GLOBAL_INDX(6), PATCH, IGA_PATCH, EGM_PATCH, SUB_NUMLN, MASTER_PATCH, SLAVE_PATCH
	INTEGER :: IGA_I, IGA_J, GLOBAL_I, GLOBAL_J
	TYPE(VEC2D) :: SUB_LN, SUPP_IGA
	TYPE(MATRIX_22) :: JACOB
	
	SUB_K(:,:)=0.D0; SUB_F(:) = POINT2D(0.D0,0.D0); SUB_NUMLN = 3; LN_NUMGSPT = 12
	
	ALLOCATE(GEO_MESH(SUB_NUMLN+1))
	
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	ALLOCATE(WEIGHT(NUMGSPT))
	ALLOCATE(EXACT_ON_BD(UBOUND(WEIGHT,1)))
	DO PATCH = 1, NUM_PATCH
		ALLOCATE(SF1(UBOUND(WEIGHT,1), (BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
		ALLOCATE(INDX1((BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
		DO JJ = 1, NUMIR(PATCH,2)-1
			IF (PATCH.EQ.2 .OR. PATCH.EQ.3 .OR. PATCH.EQ.4) THEN		! LEFT
			!----------------------- LEFT SIDE ON THE PARAMETER SPACE ------------------------!
				SUB_LN = VEC2D(POINT2D(0.D0,IR_GRID(PATCH,2,JJ)), POINT2D(0.D0,IR_GRID(PATCH,2,JJ+1)))
				CALL LEAST_SQUARE_LC_INT_II(SF1, INDX1, WEIGHT, EXACT_ON_BD, PATCH, SUB_LN, 'L')
				DO I=1, UBOUND(INDX1,1)
					DO J=1, UBOUND(INDX1,1)
						DIFF_NN = 0.D0
						CALL DR_GL_INDX_FII(GLOBAL_INDX(1:2), PATCH, (/I,J/), INDX1)
						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
						ELSE
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
						ENDIF
					ENDDO
					IF (GLOBAL_INDX(1).EQ.0) THEN
					ELSE
						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
						SUB_F(GLOBAL_INDX(1))%X = SUB_F(GLOBAL_INDX(1))%X + DIFF_NN
						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
						SUB_F(GLOBAL_INDX(1))%Y = SUB_F(GLOBAL_INDX(1))%Y + DIFF_NN
					ENDIF
				ENDDO
					
					PRINT*, 'LF-1', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
				
				DO MASTER_PATCH = 1, PATCH-1
				!-----------------Compute elements on interface (i.e. FII)---------------------
					DO I = 1, UBOUND(INDX1,1)
						DO J = 1, UBOUND(INDX1,1)
							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
							IF ((GLOBAL_INDX(1).NE.0 .AND. GLOBAL_INDX(2).NE.0) .OR. &
									(GLOBAL_INDX(3).NE.0 .AND. GLOBAL_INDX(4).NE.0) .OR. &
									(GLOBAL_INDX(5).NE.0 .AND. GLOBAL_INDX(6).NE.0)) THEN
		! 					PRINT*, 'HERE 1', GLOBAL_INDX
								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
								DO GLOBAL_I = 1, 3
									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0 .AND. GLOBAL_INDX(INT(2*GLOBAL_I)).NE.0) THEN
										SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) = SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) + DIFF_NN
									ENDIF
								ENDDO
							ENDIF
						ENDDO
! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,I/), INDX1)
						IF (GLOBAL_INDX(1).NE.0 .OR. GLOBAL_INDX(3).NE.0 .OR. GLOBAL_INDX(5).NE.0) THEN
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
							DO GLOBAL_I = 1, 3
								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X + DIFF_NN
								ENDIF
							ENDDO
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
							DO GLOBAL_I = 1, 3
								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y + DIFF_NN
								ENDIF
							ENDDO
						ENDIF
					ENDDO
						
						PRINT*, 'LF-2', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
						
					!-----------------Compute elements on interface FIJ---------------------
					DO I = 1, UBOUND(INDX1,1)
						DO J = 1, UBOUND(INDX1,1)
							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FIJ(GLOBAL_INDX(1:2), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
							IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
							ELSE
		! 								PRINT*, 'HERE 2', GLOBAL_INDX
								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
								SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
								SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
							ENDIF
						ENDDO
					ENDDO
					
						PRINT*, 'LF-3', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X

! 						READ(*,*)
				ENDDO
			ENDIF
		ENDDO
		DEALLOCATE(SF1, INDX1)
	ENDDO
	DEALLOCATE(WEIGHT, EXACT_ON_BD)
				
			PRINT*, 'LF-4', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X

	ALLOCATE(WEIGHT(NUMGSPT))
	ALLOCATE(EXACT_ON_BD(UBOUND(WEIGHT,1)))
	DO PATCH = 1, NUM_PATCH
		ALLOCATE(SF1(UBOUND(WEIGHT,1), (BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
		ALLOCATE(INDX1((BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
		DO JJ = 1, NUMIR(PATCH,2)-1
			IF (PATCH.EQ.1 .OR. PATCH.EQ.3 .OR. PATCH.EQ.4) THEN		! RIGHT
			!----------------------- RIGHT SIDE ON THE PARAMETER SPACE ------------------------!
				SUB_LN = VEC2D(POINT2D(1.D0,IR_GRID(PATCH,2,JJ)), POINT2D(1.D0,IR_GRID(PATCH,2,JJ+1)))
				DIFF_NN = 0.D0
				CALL LEAST_SQUARE_LC_INT_II(SF1, INDX1, WEIGHT, EXACT_ON_BD, PATCH, SUB_LN, 'R')
				DO I=1, UBOUND(INDX1,1)
					DO J=1, UBOUND(INDX1,1)
						CALL DR_GL_INDX_FII(GLOBAL_INDX(1:2), PATCH, (/I,J/), INDX1)
						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
						ELSE
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
						ENDIF
					ENDDO
					IF (GLOBAL_INDX(1).EQ.0) THEN
					ELSE
						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
						SUB_F(GLOBAL_INDX(1))%X = SUB_F(GLOBAL_INDX(1))%X + DIFF_NN
						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
						SUB_F(GLOBAL_INDX(1))%Y = SUB_F(GLOBAL_INDX(1))%Y + DIFF_NN
					ENDIF
				ENDDO
				
				PRINT*, 'RG-1', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
				
				DO MASTER_PATCH = 1, PATCH-1
				!-----------------Compute elements on interface (i.e. FII)---------------------
					DO I = 1, UBOUND(INDX1,1)
						DO J = 1, UBOUND(INDX1,1)
							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
							IF ((GLOBAL_INDX(1).NE.0 .AND. GLOBAL_INDX(2).NE.0) .OR. &
									(GLOBAL_INDX(3).NE.0 .AND. GLOBAL_INDX(4).NE.0) .OR. &
									(GLOBAL_INDX(5).NE.0 .AND. GLOBAL_INDX(6).NE.0)) THEN
		! 					PRINT*, 'HERE 1', GLOBAL_INDX
								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
								DO GLOBAL_I = 1, 3
									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0 .AND. GLOBAL_INDX(INT(2*GLOBAL_I)).NE.0) THEN
										SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) = SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) + DIFF_NN
									ENDIF
								ENDDO
							ENDIF
						ENDDO
! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,I/), INDX1)
						IF (GLOBAL_INDX(1).NE.0 .OR. GLOBAL_INDX(3).NE.0 .OR. GLOBAL_INDX(5).NE.0) THEN
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
							DO GLOBAL_I = 1, 3
								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X + DIFF_NN
								ENDIF
							ENDDO
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
							DO GLOBAL_I = 1, 3
								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y + DIFF_NN
								ENDIF
							ENDDO
						ENDIF
					ENDDO
					
					PRINT*, 'RG-2', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
					
					!-----------------Compute elements on interface FIJ---------------------
					DO I = 1, UBOUND(INDX1,1)
						DO J = 1, UBOUND(INDX1,1)
							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FIJ(GLOBAL_INDX(1:2), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
							IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
							ELSE
		! 								PRINT*, 'HERE 2', GLOBAL_INDX
								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
								SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
								SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
							ENDIF
						ENDDO
					ENDDO
					
					PRINT*, 'RG-3', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
					
				ENDDO
			ENDIF
		ENDDO
		DEALLOCATE(SF1, INDX1)
	ENDDO
	DEALLOCATE(WEIGHT, EXACT_ON_BD)
	
	PRINT*, 'RG-4', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
	
	!----------------------------------------------!
	!! LINE INTEGRAL WITH GEOMETRIC MESH REFINEMENT
	!----------------------------------------------!
! 	ALLOCATE(WEIGHT(LN_NUMGSPT))
! 	ALLOCATE(EXACT_ON_BD(UBOUND(WEIGHT,1)))
! 	DO PATCH = 1, NUM_PATCH
! 		ALLOCATE(SF1(UBOUND(WEIGHT,1), (BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
! 		ALLOCATE(INDX1((BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
! 		DO JJ = 1, NUMIR(PATCH,2)-1
! 			IF (PATCH.EQ.3) THEN		! RIGHT with Singular load function
! 			!----------------------- RIGHT SIDE ON THE PARAMETER SPACE ------------------------!
! 				OPEN(12, FILE = './data/geo_mesh1')
! 				GEO_MESH(SUB_NUMLN+1) = VEC2D(POINT2D(1.D0, IR_GRID(PATCH,2,JJ+1) - (IR_GRID(PATCH,2,JJ+1) - IR_GRID(PATCH,2,JJ))*(0.5D0)**(SUB_NUMLN)), &
! 														POINT2D(1.D0, IR_GRID(PATCH,2,JJ+1)))
! 				WRITE(12,*) GEO_MESH(SUB_NUMLN+1)%U
! 				WRITE(12,*) GEO_MESH(SUB_NUMLN+1)%V
! 				DO I = SUB_NUMLN, 1, -1
! 					GEO_MESH(I) = VEC2D(POINT2D(1.D0, IR_GRID(PATCH,2,JJ+1) - (IR_GRID(PATCH,2,JJ+1) - IR_GRID(PATCH,2,JJ))*(0.5D0)**(I)), &
! 															POINT2D(1.D0, IR_GRID(PATCH,2,JJ+1) - (IR_GRID(PATCH,2,JJ+1) - IR_GRID(PATCH,2,JJ))*(0.5D0)**(I-1)))
! 					WRITE(12,*) GEO_MESH(I)%U
! 					WRITE(12,*) GEO_MESH(I)%V
! 				ENDDO
! 				CLOSE(12)
! 				DO II=1, SUB_NUMLN + 1
! 					DIFF_NN = 0.D0
! 					CALL LEAST_SQUARE_LC_INT_II(SF1, INDX1, WEIGHT, EXACT_ON_BD, PATCH, GEO_MESH(II), 'R')
! 					DO I=1, UBOUND(INDX1,1)
! 						DO J=1, UBOUND(INDX1,1)
! 							CALL DR_GL_INDX_FII(GLOBAL_INDX(1:2), PATCH, (/I,J/), INDX1)
! 							IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 							ELSE
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 								SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 							ENDIF
! 						ENDDO
! 						IF (GLOBAL_INDX(1).EQ.0) THEN
! 						ELSE
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 							SUB_F(GLOBAL_INDX(1))%X = SUB_F(GLOBAL_INDX(1))%X + DIFF_NN
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 							SUB_F(GLOBAL_INDX(1))%Y = SUB_F(GLOBAL_INDX(1))%Y + DIFF_NN
! 						ENDIF
! 					ENDDO
! 					
! 					PRINT*, 'RS-1', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
! 					
! 					DO MASTER_PATCH = 1, PATCH-1
! 					!-----------------Compute elements on interface (i.e. FII)---------------------
! 						DO I = 1, UBOUND(INDX1,1)
! 							DO J = 1, UBOUND(INDX1,1)
! 								CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 								IF ((GLOBAL_INDX(1).NE.0 .AND. GLOBAL_INDX(2).NE.0) .OR. &
! 										(GLOBAL_INDX(3).NE.0 .AND. GLOBAL_INDX(4).NE.0) .OR. &
! 										(GLOBAL_INDX(5).NE.0 .AND. GLOBAL_INDX(6).NE.0)) THEN
! 			! 					PRINT*, 'HERE 1', GLOBAL_INDX
! 									DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 									DO GLOBAL_I = 1, 3
! 										IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0 .AND. GLOBAL_INDX(INT(2*GLOBAL_I)).NE.0) THEN
! 											SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) = SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) + DIFF_NN
! 										ENDIF
! 									ENDDO
! 								ENDIF
! 							ENDDO
! ! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,I/), INDX1)
! 							IF (GLOBAL_INDX(1).NE.0 .OR. GLOBAL_INDX(3).NE.0 .OR. GLOBAL_INDX(5).NE.0) THEN
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 								DO GLOBAL_I = 1, 3
! 									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 										SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X + DIFF_NN
! 									ENDIF
! 								ENDDO
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 								DO GLOBAL_I = 1, 3
! 									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 										SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y + DIFF_NN
! 									ENDIF
! 								ENDDO
! 							ENDIF
! 						ENDDO
! 						
! 						PRINT*, 'RS-2', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
! 						
! 						!-----------------Compute elements on interface FIJ---------------------
! 						DO I = 1, UBOUND(INDX1,1)
! 							DO J = 1, UBOUND(INDX1,1)
! 								CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FIJ(GLOBAL_INDX(1:2), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 								IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 								ELSE
! 			! 								PRINT*, 'HERE 2', GLOBAL_INDX
! 									DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 									SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 									SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
! 								ENDIF
! 							ENDDO
! 						ENDDO
! 						
! 						PRINT*, 'RS-3', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
! 						
! 					ENDDO
! 				ENDDO
! 			ENDIF
! 		ENDDO
! 		DEALLOCATE(SF1, INDX1)
! 	ENDDO
! 	DEALLOCATE(WEIGHT, EXACT_ON_BD)
	
! 	PRINT*, 'RS-4', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
	
	ALLOCATE(WEIGHT(NUMGSPT))
	ALLOCATE(EXACT_ON_BD(UBOUND(WEIGHT,1)))
	DO PATCH = 1, NUM_PATCH
		ALLOCATE(SF1(UBOUND(WEIGHT,1), (BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
		ALLOCATE(INDX1((BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
		DO JJ = 1, NUMIR(PATCH,1)-1
			IF (PATCH==1 .OR. PATCH==3) THEN		! BOTTOM
			!----------------------- BOTTOM SIDE ON THE PARAMETER SPACE ------------------------!
				DIFF_NN = 0.D0
				SUB_LN = VEC2D(POINT2D(IR_GRID(PATCH,1,JJ),0.D0), POINT2D(IR_GRID(PATCH,1,JJ+1),0.D0))
				CALL LEAST_SQUARE_LC_INT_II(SF1, INDX1, WEIGHT, EXACT_ON_BD, PATCH, SUB_LN, 'B')
				DO I=1, UBOUND(INDX1,1)
					DO J=1, UBOUND(INDX1,1)
						CALL DR_GL_INDX_FII(GLOBAL_INDX(1:2), PATCH, (/I,J/), INDX1)
						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
						ELSE
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
						ENDIF
					ENDDO
					IF (GLOBAL_INDX(1).EQ.0) THEN
					ELSE
						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
						SUB_F(GLOBAL_INDX(1))%X = SUB_F(GLOBAL_INDX(1))%X + DIFF_NN
						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
						SUB_F(GLOBAL_INDX(1))%Y = SUB_F(GLOBAL_INDX(1))%Y + DIFF_NN
					ENDIF
				ENDDO
				
				PRINT*, 'BT-1', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
				
				DO MASTER_PATCH = 1, PATCH-1
				!-----------------Compute elements on interface (i.e. FII)---------------------
					DO I = 1, UBOUND(INDX1,1)
						DO J = 1, UBOUND(INDX1,1)
							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
							IF ((GLOBAL_INDX(1).NE.0 .AND. GLOBAL_INDX(2).NE.0) .OR. &
									(GLOBAL_INDX(3).NE.0 .AND. GLOBAL_INDX(4).NE.0) .OR. &
									(GLOBAL_INDX(5).NE.0 .AND. GLOBAL_INDX(6).NE.0)) THEN
		! 					PRINT*, 'HERE 1', GLOBAL_INDX
								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
								DO GLOBAL_I = 1, 3
									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0 .AND. GLOBAL_INDX(INT(2*GLOBAL_I)).NE.0) THEN
										SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) = SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) + DIFF_NN
									ENDIF
								ENDDO
							ENDIF
						ENDDO
! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,I/), INDX1)
						IF (GLOBAL_INDX(1).NE.0 .OR. GLOBAL_INDX(3).NE.0 .OR. GLOBAL_INDX(5).NE.0) THEN
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
							DO GLOBAL_I = 1, 3
								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X + DIFF_NN
								ENDIF
							ENDDO
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
							DO GLOBAL_I = 1, 3
								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y + DIFF_NN
								ENDIF
							ENDDO
						ENDIF
					ENDDO
					
					PRINT*, 'BT-2', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
					
					!-----------------Compute elements on interface FIJ---------------------
					DO I = 1, UBOUND(INDX1,1)
						DO J = 1, UBOUND(INDX1,1)
							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FIJ(GLOBAL_INDX(1:2), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
							IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
							ELSE
		! 								PRINT*, 'HERE 2', GLOBAL_INDX
								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
								SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
								SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
							ENDIF
						ENDDO
					ENDDO
					
					PRINT*, 'BT-3', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
					
				ENDDO
			ENDIF
		ENDDO
		DEALLOCATE(SF1, INDX1)
	ENDDO
	DEALLOCATE(WEIGHT, EXACT_ON_BD)

	PRINT*, 'BT-4', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
	
	!----------------------------------------------!
	!! LINE INTEGRAL WITH GEOMETRIC MESH REFINEMENT
	!----------------------------------------------!
! 	ALLOCATE(WEIGHT(LN_NUMGSPT))
! 	ALLOCATE(EXACT_ON_BD(UBOUND(WEIGHT,1)))
! 	DO PATCH = 1, NUM_PATCH
! 		ALLOCATE(SF1(UBOUND(WEIGHT,1), (BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
! 		ALLOCATE(INDX1((BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
! 		DO JJ = 1, NUMIR(PATCH,1)-1
! 			IF (PATCH==1) THEN		! BOTTOM with Singular load function
! 			!----------------------- BOTTOM SIDE ON THE PARAMETER SPACE ------------------------!
! 				OPEN(14, FILE = './data/geo_mesh2')
! 				GEO_MESH(1) = VEC2D(POINT2D(IR_GRID(PATCH,1,JJ), 0.D0), &
! 														POINT2D(IR_GRID(PATCH,1,JJ) + (IR_GRID(PATCH,1,JJ+1) - IR_GRID(PATCH,1,JJ))*(0.5D0)**(SUB_NUMLN), 0.D0))
! 				
! 				WRITE(14,*) GEO_MESH(1)%U
! 				WRITE(14,*) GEO_MESH(1)%V
! 				
! 				DO I = 1, SUB_NUMLN
! 					GEO_MESH(I+1) = VEC2D(POINT2D(IR_GRID(PATCH,1,JJ) + (IR_GRID(PATCH,1,JJ+1) - IR_GRID(PATCH,1,JJ))*(0.5D0)**(SUB_NUMLN-I+1), 0.D0), &
! 															POINT2D(IR_GRID(PATCH,1,JJ) + (IR_GRID(PATCH,1,JJ+1) - IR_GRID(PATCH,1,JJ))*(0.5D0)**(SUB_NUMLN-I), 0.D0))
! 					WRITE(14,*) GEO_MESH(I+1)%U
! 					WRITE(14,*) GEO_MESH(I+1)%V
! 				ENDDO
! 				
! 				DIFF_NN = 0.D0
! 				DO II = 1, SUB_NUMLN + 1
! 					CALL LEAST_SQUARE_LC_INT_II(SF1, INDX1, WEIGHT, EXACT_ON_BD, PATCH, GEO_MESH(II), 'B')
! 					DO I=1, UBOUND(INDX1,1)
! 						DO J=1, UBOUND(INDX1,1)
! 							CALL DR_GL_INDX_FII(GLOBAL_INDX(1:2), PATCH, (/I,J/), INDX1)
! 							IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 							ELSE
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 								SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 							ENDIF
! 						ENDDO
! 						IF (GLOBAL_INDX(1).EQ.0) THEN
! 						ELSE
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 							SUB_F(GLOBAL_INDX(1))%X = SUB_F(GLOBAL_INDX(1))%X + DIFF_NN
! 							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 							SUB_F(GLOBAL_INDX(1))%Y = SUB_F(GLOBAL_INDX(1))%Y + DIFF_NN
! 						ENDIF
! 					ENDDO
! 					
! 					PRINT*, 'BS-1', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
! 					
! 					DO MASTER_PATCH = 1, PATCH-1
! 					!-----------------Compute elements on interface (i.e. FII)---------------------
! 						DO I = 1, UBOUND(INDX1,1)
! 							DO J = 1, UBOUND(INDX1,1)
! 								CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 								IF ((GLOBAL_INDX(1).NE.0 .AND. GLOBAL_INDX(2).NE.0) .OR. &
! 										(GLOBAL_INDX(3).NE.0 .AND. GLOBAL_INDX(4).NE.0) .OR. &
! 										(GLOBAL_INDX(5).NE.0 .AND. GLOBAL_INDX(6).NE.0)) THEN
! 			! 					PRINT*, 'HERE 1', GLOBAL_INDX
! 									DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 									DO GLOBAL_I = 1, 3
! 										IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0 .AND. GLOBAL_INDX(INT(2*GLOBAL_I)).NE.0) THEN
! 											SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) = SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) + DIFF_NN
! 										ENDIF
! 									ENDDO
! 								ENDIF
! 							ENDDO
! 	! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,I/), INDX1)
! 							IF (GLOBAL_INDX(1).NE.0 .OR. GLOBAL_INDX(3).NE.0 .OR. GLOBAL_INDX(5).NE.0) THEN
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
! 								DO GLOBAL_I = 1, 3
! 									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 										SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X + DIFF_NN
! 									ENDIF
! 								ENDDO
! 								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
! 								DO GLOBAL_I = 1, 3
! 									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
! 										SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y + DIFF_NN
! 									ENDIF
! 								ENDDO
! 							ENDIF
! 						ENDDO
! 						
! 						PRINT*, 'BS-2', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
! 						
! 						!-----------------Compute elements on interface FIJ---------------------
! 						DO I = 1, UBOUND(INDX1,1)
! 							DO J = 1, UBOUND(INDX1,1)
! 								CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FIJ(GLOBAL_INDX(1:2), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
! 								IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
! 								ELSE
! 			! 								PRINT*, 'HERE 2', GLOBAL_INDX
! 									DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
! 									SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
! 									SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
! 								ENDIF
! 							ENDDO
! 						ENDDO
! 						
! 						PRINT*, 'BS-3', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
! 						
! 					ENDDO
! 				ENDDO
! 			ENDIF
! 		ENDDO
! 		DEALLOCATE(SF1, INDX1)
! 	ENDDO
! 	DEALLOCATE(WEIGHT, EXACT_ON_BD)
	
! 	PRINT*, 'BS-4', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
			
	ALLOCATE(WEIGHT(NUMGSPT))
	ALLOCATE(EXACT_ON_BD(UBOUND(WEIGHT,1)))
	DO PATCH = 1, NUM_PATCH
		ALLOCATE(SF1(UBOUND(WEIGHT,1), (BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
		ALLOCATE(INDX1((BASIS_KVEC(PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(PATCH,2)%POLY_ORDER+1)))
		DO JJ = 1, NUMIR(PATCH,1)-1
			IF (PATCH==1 .OR. PATCH==2) THEN		! TOP
			!----------------------- TOP SIDE ON THE PARAMETER SPACE ------------------------!
				DIFF_NN = 0.D0
				SUB_LN = VEC2D(POINT2D(IR_GRID(PATCH,1,JJ),1.D0), POINT2D(IR_GRID(PATCH,1,JJ+1),1.D0))
				CALL LEAST_SQUARE_LC_INT_II(SF1, INDX1, WEIGHT, EXACT_ON_BD, PATCH, SUB_LN, 'T')
				DO I=1, UBOUND(INDX1,1)
					DO J=1, UBOUND(INDX1,1)
						CALL DR_GL_INDX_FII(GLOBAL_INDX(1:2), PATCH, (/I,J/), INDX1)
						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
						ELSE
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
						ENDIF
					ENDDO
					IF (GLOBAL_INDX(1).EQ.0) THEN
					ELSE
						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
						SUB_F(GLOBAL_INDX(1))%X = SUB_F(GLOBAL_INDX(1))%X + DIFF_NN
						DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
						SUB_F(GLOBAL_INDX(1))%Y = SUB_F(GLOBAL_INDX(1))%Y + DIFF_NN
					ENDIF
				ENDDO
				
				PRINT*, 'TP-1', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
				
				DO MASTER_PATCH = 1, PATCH-1
				!-----------------Compute elements on interface (i.e. FII)---------------------
					DO I = 1, UBOUND(INDX1,1)
						DO J = 1, UBOUND(INDX1,1)
							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
							IF ((GLOBAL_INDX(1).NE.0 .AND. GLOBAL_INDX(2).NE.0) .OR. &
									(GLOBAL_INDX(3).NE.0 .AND. GLOBAL_INDX(4).NE.0) .OR. &
									(GLOBAL_INDX(5).NE.0 .AND. GLOBAL_INDX(6).NE.0)) THEN
		! 					PRINT*, 'HERE 1', GLOBAL_INDX
								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
								DO GLOBAL_I = 1, 3
									IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0 .AND. GLOBAL_INDX(INT(2*GLOBAL_I)).NE.0) THEN
										SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) = SUB_K(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)), GLOBAL_INDX(INT(2*GLOBAL_I))) + DIFF_NN
									ENDIF
								ENDDO
							ENDIF
						ENDDO
! 							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FII(GLOBAL_INDX(1:6), (/MASTER_PATCH, PATCH/), (/I,I/), INDX1)
						IF (GLOBAL_INDX(1).NE.0 .OR. GLOBAL_INDX(3).NE.0 .OR. GLOBAL_INDX(5).NE.0) THEN
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%X)
							DO GLOBAL_I = 1, 3
								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%X + DIFF_NN
								ENDIF
							ENDDO
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), EXACT_ON_BD(:)%Y)
							DO GLOBAL_I = 1, 3
								IF (GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)).NE.0) THEN
									SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y = SUB_F(GLOBAL_INDX(INT(2*(GLOBAL_I-1)+1)))%Y + DIFF_NN
								ENDIF
							ENDDO
						ENDIF
					ENDDO
					
					PRINT*, 'TP-2', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
					
					!-----------------Compute elements on interface FIJ---------------------
					DO I = 1, UBOUND(INDX1,1)
						DO J = 1, UBOUND(INDX1,1)
							CALL DR_FIND_GL_INDX_ALONG_INTERFACE_FIJ(GLOBAL_INDX(1:2), (/MASTER_PATCH, PATCH/), (/I,J/), INDX1)
							IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
							ELSE
		! 								PRINT*, 'HERE 2', GLOBAL_INDX
								DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF1(:,J)%D00)
								SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
								SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
							ENDIF
						ENDDO
					ENDDO
					
					PRINT*, 'TP-3', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
					
				ENDDO
! 				PRINT*, 'TP', PATCH, JJ, SUB_K(22,19)
			ENDIF
		ENDDO
		DEALLOCATE(SF1, INDX1)
	ENDDO
	DEALLOCATE(WEIGHT, EXACT_ON_BD)
	
	PRINT*, 'TP-4', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
	
	!----------------------- INTERSECTION LINE BETWEEN IGA AND EGM ------------------------!
	IGA_PATCH = 3
	EGM_PATCH = 4
	
	ALLOCATE(WEIGHT(XIGA_NUMGSPT))
	ALLOCATE(SF1(UBOUND(WEIGHT,1), (BASIS_KVEC(IGA_PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(IGA_PATCH,2)%POLY_ORDER+1)))
	ALLOCATE(INDX1((BASIS_KVEC(IGA_PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(IGA_PATCH,2)%POLY_ORDER+1)))
	
	ALLOCATE(SF2(XIGA_NUMGSPT, (BASIS_KVEC(EGM_PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(EGM_PATCH,2)%POLY_ORDER+1)))
	ALLOCATE(INDX2((BASIS_KVEC(EGM_PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(EGM_PATCH,2)%POLY_ORDER+1)))
	
	DO IGA_I = 1, NUMIR(IGA_PATCH,2)-1
		SUPP_IGA = VEC2D(POINT2D(1.D0, IR_GRID(IGA_PATCH,2,IGA_I)), POINT2D(1.D0, IR_GRID(IGA_PATCH,2,IGA_I+1)))
		DO JJ = 1, NUMIR(EGM_PATCH,2)-1
			SUB_LN_LENGTH = DABS(IR_GRID(EGM_PATCH,2,JJ+1) - IR_GRID(EGM_PATCH,2,JJ))/(1.D0*NUM_LN)
			!----------------------- LEFT SIDE ON THE PARAMETER SPACE ------------------------!
			DO II=1, NUM_LN
				SUB_LN = VEC2D(POINT2D(0.D0,IR_GRID(EGM_PATCH,2,JJ)+(II-1)*SUB_LN_LENGTH), POINT2D(0.D0,IR_GRID(EGM_PATCH,2,JJ)+II*SUB_LN_LENGTH))
				DIFF_NN = 0.D0
				CALL LEAST_SQUARE_LC_INT_IJ(SF1, SF2, INDX1, INDX2, WEIGHT, (/IGA_PATCH,EGM_PATCH/), SUB_LN, SUPP_IGA, 'L')
				DO I=1, UBOUND(INDX1,1)
					DO J=1, UBOUND(INDX2,1)
						CALL DR_GL_INDX_FIJ(GLOBAL_INDX(1:2), (/IGA_PATCH, EGM_PATCH/), (/I, J/), INDX1, INDX2)
						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
						ELSE
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF2(:,J)%D00)
							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
							SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
						ENDIF
						CALL DR_FIND_GL_INDX_ALONG_INTERFACE_AND_EGM(GLOBAL_INDX(1:2), (/IGA_PATCH, EGM_PATCH/), (/I,J/), INDX1, INDX2)
						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
						ELSE
	! 								PRINT*, 'HERE 2', GLOBAL_INDX
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF2(:,J)%D00)
							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
							SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
						ENDIF
					ENDDO
				ENDDO
			ENDDO
		ENDDO
	ENDDO
	DEALLOCATE(SF1, SF2, INDX1, INDX2, WEIGHT)
	
	PRINT*, 'IE-1', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
	
	IGA_PATCH = 1
	EGM_PATCH = 4
	
	ALLOCATE(WEIGHT(XIGA_NUMGSPT))
	ALLOCATE(SF1(UBOUND(WEIGHT,1), (BASIS_KVEC(IGA_PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(IGA_PATCH,2)%POLY_ORDER+1)))
	ALLOCATE(INDX1((BASIS_KVEC(IGA_PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(IGA_PATCH,2)%POLY_ORDER+1)))
	
	ALLOCATE(SF2(XIGA_NUMGSPT, (BASIS_KVEC(EGM_PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(EGM_PATCH,2)%POLY_ORDER+1)))
	ALLOCATE(INDX2((BASIS_KVEC(EGM_PATCH,1)%POLY_ORDER+1)*(BASIS_KVEC(EGM_PATCH,2)%POLY_ORDER+1)))
	
	DO IGA_I = 1, NUMIR(IGA_PATCH,1)-1
		SUPP_IGA = VEC2D(POINT2D(IR_GRID(IGA_PATCH,1,IGA_I),0.D0), POINT2D(IR_GRID(IGA_PATCH,1,IGA_I+1),0.D0))
		DO JJ = 1, NUMIR(EGM_PATCH,2)-1
			SUB_LN_LENGTH = DABS(IR_GRID(EGM_PATCH,2,JJ+1) - IR_GRID(EGM_PATCH,2,JJ))/(1.D0*NUM_LN)
			!----------------------- RIGHT SIDE ON THE PARAMETER SPACE ------------------------!
			DO II=1, NUM_LN
				SUB_LN = VEC2D(POINT2D(1.D0,IR_GRID(EGM_PATCH,2,JJ)+(II-1)*SUB_LN_LENGTH), POINT2D(1.D0,IR_GRID(EGM_PATCH,2,JJ)+II*SUB_LN_LENGTH))
				DIFF_NN = 0.D0
	! 			PRINT*, 'RM', JJ, II, IGA_PATCH, EGM_PATCH
				CALL LEAST_SQUARE_LC_INT_IJ(SF1, SF2, INDX1, INDX2, WEIGHT, (/IGA_PATCH,EGM_PATCH/), SUB_LN, SUPP_IGA, 'R')
				DO I=1, UBOUND(INDX1,1)
					DO J=1, UBOUND(INDX2,1)
						CALL DR_GL_INDX_FIJ(GLOBAL_INDX(1:2), (/IGA_PATCH, EGM_PATCH/), (/I, J/), INDX1, INDX2)
						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
						ELSE
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF2(:,J)%D00)
							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
							SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
						ENDIF
						CALL DR_FIND_GL_INDX_ALONG_INTERFACE_AND_EGM(GLOBAL_INDX(1:2), (/IGA_PATCH, EGM_PATCH/), (/I,J/), INDX1, INDX2)
						IF (GLOBAL_INDX(1).EQ.0 .OR. GLOBAL_INDX(2).EQ.0) THEN
						ELSE
	! 								PRINT*, 'HERE 2', GLOBAL_INDX
							DIFF_NN = DOT_PRODUCT(PRODUCT(RESHAPE((/SF1(:,I)%D00, WEIGHT(:)/), (/UBOUND(WEIGHT,1), 2/), ORDER=ORDER1), 2), SF2(:,J)%D00)
							SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) = SUB_K(GLOBAL_INDX(1), GLOBAL_INDX(2)) + DIFF_NN
							SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) = SUB_K(GLOBAL_INDX(2), GLOBAL_INDX(1)) + DIFF_NN
						ENDIF
					ENDDO
				ENDDO
			ENDDO
		ENDDO
	ENDDO
	
	PRINT*, 'IE-2', PATCH, JJ, SUB_K(1,1), SUB_F(1)%X
	
	DEALLOCATE(SF1, SF2, INDX1, INDX2, WEIGHT)
	
END SUBROUTINE GEN_BD_LN